tags: published jit analysis vm verification bpf
title: 2020-10-21 Очередное подтверждение тому факту, что работа над...
type: text/x-markdown

Автор: Peter Sovietov

Очередное подтверждение тому факту, что работа над компиляторами -- это не только  известные проекты-бегемоты в духе LLVM/GCC для 2-3 популярных архитектур и виртуальных машин. 

Вы слышали о BPF? Впрочем, что я говорю, если читаете внимательно PLComp, то, конечно, слышали. Но, в любом случае, есть замечательная заметка, которая вводит в предмет: 

**BPF, XDP, Packet Filters and UDP**
[https://fly.io/blog/bpf-xdp-packet-filters-and-udp/](https://fly.io/blog/bpf-xdp-packet-filters-and-udp/)

Посмотрите, сколько всего интересного! Узкая предметная область, виртуальные машины, JIT-компиляция, статический анализ кода, верификация.

В заметке есть ссылка на хорошую статью 1999 года: 

**BPF+: Exploiting Global Data-flow Optimization in a Generalized Packet Filter Architecture**
[https://andrewbegel.com/papers/bpf.pdf](https://andrewbegel.com/papers/bpf.pdf)

Ничего себе, да? Такие-то технологии для, вроде бы, заурядной задачи фильтрации пакетов!

И вот кульминация, статья уже совсем свежая:

**Specification and verification in the field: Applying formal methods to BPF just-in-time compilers in the Linux kernel**
[https://unsat.cs.washington.edu/papers/nelson-jitterbug.pdf](https://unsat.cs.washington.edu/papers/nelson-jitterbug.pdf)

Складывается ощущение, что BPF -- своеобразный полигон для обкатки перспективных технологий компиляции. Это объяснимо: на исходный язык и вычисления накладываются жесткие ограничения, сама виртуальная машина простая -- есть где развернуться и применить что-нибудь изощренное. И, разумеется, интересны перспективы использования BPF в специализированных аппаратных решениях.

P.S. Вообще, в области обработки сетевых пакетов компиляторные технологии в целом развиваются очень интересным образом, существуют работающие подходы из области синтеза программ и я к этой теме еще обязательно вернусь.

